
TP0 Control III.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000006dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000668  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  000006dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000070c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  0000074c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ad5  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b0  00000000  00000000  000012c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000050d  00000000  00000000  00001b79  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  00002088  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c7  00000000  00000000  000021dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000024f  00000000  00000000  000026a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000028f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 30       	cpi	r26, 0x05	; 5
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <main>
  9e:	0c 94 32 03 	jmp	0x664	; 0x664 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setup_ADC>:
	ADC INTERRUPT = ENABLE
	PIN DE ENTRADA = ADC1
	REFERENCIA = 5V
	*/
	
	ADMUX = (1 << REFS0) | (1 << MUX0);
  a6:	81 e4       	ldi	r24, 0x41	; 65
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1 << ADEN) | (0 << ADIE) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); 	
  ac:	87 e8       	ldi	r24, 0x87	; 135
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  b2:	08 95       	ret

000000b4 <setup_PWM>:
	COMPARADOR DC = OCR1A
	PIN DE  SALIDA = PB1
	DC INICIAL = 50%
	*/
	
	DDRB |= (1 << PB1); // OC1A = PB1 en Arduino Uno
  b4:	84 b1       	in	r24, 0x04	; 4
  b6:	82 60       	ori	r24, 0x02	; 2
  b8:	84 b9       	out	0x04, r24	; 4

	TCCR1A = (1 << WGM11) | (1 << COM1A1);
  ba:	82 e8       	ldi	r24, 0x82	; 130
  bc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = (1 << WGM12) | (1 << WGM13) | (1 << CS10); // 
  c0:	89 e1       	ldi	r24, 0x19	; 25
  c2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIMSK1 |= (1 << TOIE1);
  c6:	ef e6       	ldi	r30, 0x6F	; 111
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	80 81       	ld	r24, Z
  cc:	81 60       	ori	r24, 0x01	; 1
  ce:	80 83       	st	Z, r24
	
	ICR1 = 15999;
  d0:	8f e7       	ldi	r24, 0x7F	; 127
  d2:	9e e3       	ldi	r25, 0x3E	; 62
  d4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  d8:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	OCR1A = 1;  // Valor inicial de ciclo de trabajo.
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  e4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  e8:	08 95       	ret

000000ea <leer_ADC>:
	
	}
	
uint16_t leer_ADC(){
	
	ADCSRA |= (1 << ADSC);
  ea:	ea e7       	ldi	r30, 0x7A	; 122
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 64       	ori	r24, 0x40	; 64
  f2:	80 83       	st	Z, r24
	
	while ( !(ADCSRA & (1 << ADIF)) ); // Se espera hasta que termine la conversion.
  f4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  f8:	84 ff       	sbrs	r24, 4
  fa:	fc cf       	rjmp	.-8      	; 0xf4 <leer_ADC+0xa>

	ADCSRA |= (1 << ADIF);
  fc:	ea e7       	ldi	r30, 0x7A	; 122
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	80 61       	ori	r24, 0x10	; 16
 104:	80 83       	st	Z, r24

	return ADC*C; // Devuelve el valor en milivoltios. C = 5.
 106:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 10a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 37 02 	call	0x46e	; 0x46e <__floatunsisf>
 116:	2a e0       	ldi	r18, 0x0A	; 10
 118:	37 ed       	ldi	r19, 0xD7	; 215
 11a:	43 ea       	ldi	r20, 0xA3	; 163
 11c:	50 e4       	ldi	r21, 0x40	; 64
 11e:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 122:	0e 94 08 02 	call	0x410	; 0x410 <__fixunssfsi>
	
	}
 126:	cb 01       	movw	r24, r22
 128:	08 95       	ret

0000012a <filtro_RC>:
		
uint16_t filtro_RC(uint16_t error){
 12a:	cf 92       	push	r12
 12c:	df 92       	push	r13
 12e:	ef 92       	push	r14
 130:	ff 92       	push	r15
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	ec 01       	movw	r28, r24
	
	// Filtrado
	
	float tension_salida = (alfa * tension_filtrada + beta * error);
 138:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <tension_filtrada>
 13c:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <tension_filtrada+0x1>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 37 02 	call	0x46e	; 0x46e <__floatunsisf>
 148:	28 e8       	ldi	r18, 0x88	; 136
 14a:	3e eb       	ldi	r19, 0xBE	; 190
 14c:	4f e7       	ldi	r20, 0x7F	; 127
 14e:	5f e3       	ldi	r21, 0x3F	; 63
 150:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 154:	6b 01       	movw	r12, r22
 156:	7c 01       	movw	r14, r24
 158:	be 01       	movw	r22, r28
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	0e 94 37 02 	call	0x46e	; 0x46e <__floatunsisf>
 162:	29 ee       	ldi	r18, 0xE9	; 233
 164:	30 ef       	ldi	r19, 0xF0	; 240
 166:	42 e8       	ldi	r20, 0x82	; 130
 168:	5a e3       	ldi	r21, 0x3A	; 58
 16a:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 16e:	9b 01       	movw	r18, r22
 170:	ac 01       	movw	r20, r24
 172:	c7 01       	movw	r24, r14
 174:	b6 01       	movw	r22, r12
 176:	0e 94 2a 01 	call	0x254	; 0x254 <__addsf3>
	
	return (uint16_t) tension_salida;
 17a:	0e 94 08 02 	call	0x410	; 0x410 <__fixunssfsi>
	
}
 17e:	cb 01       	movw	r24, r22
 180:	df 91       	pop	r29
 182:	cf 91       	pop	r28
 184:	ff 90       	pop	r15
 186:	ef 90       	pop	r14
 188:	df 90       	pop	r13
 18a:	cf 90       	pop	r12
 18c:	08 95       	ret

0000018e <tension_a_WC>:
	
	// Convierte un valor de tensión en milivoltios a un entero entre 0 y 15999, que se utiliza
	// como valor de comparacion del timer1.
	// Esto define el ciclo de trabajo (WC) de la PWM de salida.
	
	return tension *  A - 1; //  A = 16000 / (5*1024)
 18e:	bc 01       	movw	r22, r24
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 37 02 	call	0x46e	; 0x46e <__floatunsisf>
 198:	20 e0       	ldi	r18, 0x00	; 0
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	4a e7       	ldi	r20, 0x7A	; 122
 19e:	56 e4       	ldi	r21, 0x46	; 70
 1a0:	0e 94 c5 02 	call	0x58a	; 0x58a <__mulsf3>
 1a4:	20 e0       	ldi	r18, 0x00	; 0
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	40 ea       	ldi	r20, 0xA0	; 160
 1aa:	55 e4       	ldi	r21, 0x45	; 69
 1ac:	0e 94 96 01 	call	0x32c	; 0x32c <__divsf3>
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	40 e8       	ldi	r20, 0x80	; 128
 1b6:	5f e3       	ldi	r21, 0x3F	; 63
 1b8:	0e 94 29 01 	call	0x252	; 0x252 <__subsf3>
 1bc:	0e 94 08 02 	call	0x410	; 0x410 <__fixunssfsi>
	
}
 1c0:	cb 01       	movw	r24, r22
 1c2:	08 95       	ret

000001c4 <__vector_13>:
volatile uint16_t tension_filtrada = 0;
uint8_t flag_lectura_ADC = 0;

#define referencia 3000 // (En milivoltios)

ISR(TIMER1_OVF_vect) {
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	8f 93       	push	r24
	
	flag_lectura_ADC = 1;
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	};
 1d6:	8f 91       	pop	r24
 1d8:	0f 90       	pop	r0
 1da:	0f be       	out	0x3f, r0	; 63
 1dc:	0f 90       	pop	r0
 1de:	1f 90       	pop	r1
 1e0:	18 95       	reti

000001e2 <main>:

int main(void)
{
    setup_ADC();
 1e2:	0e 94 53 00 	call	0xa6	; 0xa6 <setup_ADC>
	setup_PWM();
 1e6:	0e 94 5a 00 	call	0xb4	; 0xb4 <setup_PWM>
	USART_init();
 1ea:	0e 94 1d 01 	call	0x23a	; 0x23a <USART_init>
	sei();
 1ee:	78 94       	sei

    while (1) {
		 
		if (flag_lectura_ADC) {
 1f0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1f4:	88 23       	and	r24, r24
 1f6:	e1 f3       	breq	.-8      	; 0x1f0 <main+0xe>
			flag_lectura_ADC = 0;
 1f8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
			
			tension_entrada = leer_ADC();
 1fc:	0e 94 75 00 	call	0xea	; 0xea <leer_ADC>
 200:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <tension_entrada+0x1>
 204:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tension_entrada>
			tension_filtrada = filtro_RC(referencia - tension_entrada);
 208:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <tension_entrada>
 20c:	30 91 04 01 	lds	r19, 0x0104	; 0x800104 <tension_entrada+0x1>
 210:	88 eb       	ldi	r24, 0xB8	; 184
 212:	9b e0       	ldi	r25, 0x0B	; 11
 214:	82 1b       	sub	r24, r18
 216:	93 0b       	sbc	r25, r19
 218:	0e 94 95 00 	call	0x12a	; 0x12a <filtro_RC>
 21c:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <tension_filtrada+0x1>
 220:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <tension_filtrada>
			OCR1A = tension_a_WC(tension_filtrada);
 224:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tension_filtrada>
 228:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <tension_filtrada+0x1>
 22c:	0e 94 c7 00 	call	0x18e	; 0x18e <tension_a_WC>
 230:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 234:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 238:	db cf       	rjmp	.-74     	; 0x1f0 <main+0xe>

0000023a <USART_init>:

#include "uart.h"

void USART_init(void) {
	// Configurar Baud Rate
	UBRR0H = (uint8_t)(BAUD_PRESCALLER >> 8);
 23a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
 23e:	87 e6       	ldi	r24, 0x67	; 103
 240:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>

	// Habilitar transmisión y recepción
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 244:	88 e1       	ldi	r24, 0x18	; 24
 246:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>

	// Configuración: 8 bits de datos, 1 bit de stop, sin paridad
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 24a:	86 e0       	ldi	r24, 0x06	; 6
 24c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 250:	08 95       	ret

00000252 <__subsf3>:
 252:	50 58       	subi	r21, 0x80	; 128

00000254 <__addsf3>:
 254:	bb 27       	eor	r27, r27
 256:	aa 27       	eor	r26, r26
 258:	0e 94 41 01 	call	0x282	; 0x282 <__addsf3x>
 25c:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_round>
 260:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_pscA>
 264:	38 f0       	brcs	.+14     	; 0x274 <__addsf3+0x20>
 266:	0e 94 84 02 	call	0x508	; 0x508 <__fp_pscB>
 26a:	20 f0       	brcs	.+8      	; 0x274 <__addsf3+0x20>
 26c:	39 f4       	brne	.+14     	; 0x27c <__addsf3+0x28>
 26e:	9f 3f       	cpi	r25, 0xFF	; 255
 270:	19 f4       	brne	.+6      	; 0x278 <__addsf3+0x24>
 272:	26 f4       	brtc	.+8      	; 0x27c <__addsf3+0x28>
 274:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_nan>
 278:	0e f4       	brtc	.+2      	; 0x27c <__addsf3+0x28>
 27a:	e0 95       	com	r30
 27c:	e7 fb       	bst	r30, 7
 27e:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>

00000282 <__addsf3x>:
 282:	e9 2f       	mov	r30, r25
 284:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_split3>
 288:	58 f3       	brcs	.-42     	; 0x260 <__addsf3+0xc>
 28a:	ba 17       	cp	r27, r26
 28c:	62 07       	cpc	r22, r18
 28e:	73 07       	cpc	r23, r19
 290:	84 07       	cpc	r24, r20
 292:	95 07       	cpc	r25, r21
 294:	20 f0       	brcs	.+8      	; 0x29e <__addsf3x+0x1c>
 296:	79 f4       	brne	.+30     	; 0x2b6 <__addsf3x+0x34>
 298:	a6 f5       	brtc	.+104    	; 0x302 <__addsf3x+0x80>
 29a:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_zero>
 29e:	0e f4       	brtc	.+2      	; 0x2a2 <__addsf3x+0x20>
 2a0:	e0 95       	com	r30
 2a2:	0b 2e       	mov	r0, r27
 2a4:	ba 2f       	mov	r27, r26
 2a6:	a0 2d       	mov	r26, r0
 2a8:	0b 01       	movw	r0, r22
 2aa:	b9 01       	movw	r22, r18
 2ac:	90 01       	movw	r18, r0
 2ae:	0c 01       	movw	r0, r24
 2b0:	ca 01       	movw	r24, r20
 2b2:	a0 01       	movw	r20, r0
 2b4:	11 24       	eor	r1, r1
 2b6:	ff 27       	eor	r31, r31
 2b8:	59 1b       	sub	r21, r25
 2ba:	99 f0       	breq	.+38     	; 0x2e2 <__addsf3x+0x60>
 2bc:	59 3f       	cpi	r21, 0xF9	; 249
 2be:	50 f4       	brcc	.+20     	; 0x2d4 <__addsf3x+0x52>
 2c0:	50 3e       	cpi	r21, 0xE0	; 224
 2c2:	68 f1       	brcs	.+90     	; 0x31e <__addsf3x+0x9c>
 2c4:	1a 16       	cp	r1, r26
 2c6:	f0 40       	sbci	r31, 0x00	; 0
 2c8:	a2 2f       	mov	r26, r18
 2ca:	23 2f       	mov	r18, r19
 2cc:	34 2f       	mov	r19, r20
 2ce:	44 27       	eor	r20, r20
 2d0:	58 5f       	subi	r21, 0xF8	; 248
 2d2:	f3 cf       	rjmp	.-26     	; 0x2ba <__addsf3x+0x38>
 2d4:	46 95       	lsr	r20
 2d6:	37 95       	ror	r19
 2d8:	27 95       	ror	r18
 2da:	a7 95       	ror	r26
 2dc:	f0 40       	sbci	r31, 0x00	; 0
 2de:	53 95       	inc	r21
 2e0:	c9 f7       	brne	.-14     	; 0x2d4 <__addsf3x+0x52>
 2e2:	7e f4       	brtc	.+30     	; 0x302 <__addsf3x+0x80>
 2e4:	1f 16       	cp	r1, r31
 2e6:	ba 0b       	sbc	r27, r26
 2e8:	62 0b       	sbc	r22, r18
 2ea:	73 0b       	sbc	r23, r19
 2ec:	84 0b       	sbc	r24, r20
 2ee:	ba f0       	brmi	.+46     	; 0x31e <__addsf3x+0x9c>
 2f0:	91 50       	subi	r25, 0x01	; 1
 2f2:	a1 f0       	breq	.+40     	; 0x31c <__addsf3x+0x9a>
 2f4:	ff 0f       	add	r31, r31
 2f6:	bb 1f       	adc	r27, r27
 2f8:	66 1f       	adc	r22, r22
 2fa:	77 1f       	adc	r23, r23
 2fc:	88 1f       	adc	r24, r24
 2fe:	c2 f7       	brpl	.-16     	; 0x2f0 <__addsf3x+0x6e>
 300:	0e c0       	rjmp	.+28     	; 0x31e <__addsf3x+0x9c>
 302:	ba 0f       	add	r27, r26
 304:	62 1f       	adc	r22, r18
 306:	73 1f       	adc	r23, r19
 308:	84 1f       	adc	r24, r20
 30a:	48 f4       	brcc	.+18     	; 0x31e <__addsf3x+0x9c>
 30c:	87 95       	ror	r24
 30e:	77 95       	ror	r23
 310:	67 95       	ror	r22
 312:	b7 95       	ror	r27
 314:	f7 95       	ror	r31
 316:	9e 3f       	cpi	r25, 0xFE	; 254
 318:	08 f0       	brcs	.+2      	; 0x31c <__addsf3x+0x9a>
 31a:	b0 cf       	rjmp	.-160    	; 0x27c <__addsf3+0x28>
 31c:	93 95       	inc	r25
 31e:	88 0f       	add	r24, r24
 320:	08 f0       	brcs	.+2      	; 0x324 <__addsf3x+0xa2>
 322:	99 27       	eor	r25, r25
 324:	ee 0f       	add	r30, r30
 326:	97 95       	ror	r25
 328:	87 95       	ror	r24
 32a:	08 95       	ret

0000032c <__divsf3>:
 32c:	0e 94 aa 01 	call	0x354	; 0x354 <__divsf3x>
 330:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_round>
 334:	0e 94 84 02 	call	0x508	; 0x508 <__fp_pscB>
 338:	58 f0       	brcs	.+22     	; 0x350 <__divsf3+0x24>
 33a:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_pscA>
 33e:	40 f0       	brcs	.+16     	; 0x350 <__divsf3+0x24>
 340:	29 f4       	brne	.+10     	; 0x34c <__divsf3+0x20>
 342:	5f 3f       	cpi	r21, 0xFF	; 255
 344:	29 f0       	breq	.+10     	; 0x350 <__divsf3+0x24>
 346:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>
 34a:	51 11       	cpse	r21, r1
 34c:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>
 350:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_nan>

00000354 <__divsf3x>:
 354:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_split3>
 358:	68 f3       	brcs	.-38     	; 0x334 <__divsf3+0x8>

0000035a <__divsf3_pse>:
 35a:	99 23       	and	r25, r25
 35c:	b1 f3       	breq	.-20     	; 0x34a <__divsf3+0x1e>
 35e:	55 23       	and	r21, r21
 360:	91 f3       	breq	.-28     	; 0x346 <__divsf3+0x1a>
 362:	95 1b       	sub	r25, r21
 364:	55 0b       	sbc	r21, r21
 366:	bb 27       	eor	r27, r27
 368:	aa 27       	eor	r26, r26
 36a:	62 17       	cp	r22, r18
 36c:	73 07       	cpc	r23, r19
 36e:	84 07       	cpc	r24, r20
 370:	38 f0       	brcs	.+14     	; 0x380 <__divsf3_pse+0x26>
 372:	9f 5f       	subi	r25, 0xFF	; 255
 374:	5f 4f       	sbci	r21, 0xFF	; 255
 376:	22 0f       	add	r18, r18
 378:	33 1f       	adc	r19, r19
 37a:	44 1f       	adc	r20, r20
 37c:	aa 1f       	adc	r26, r26
 37e:	a9 f3       	breq	.-22     	; 0x36a <__divsf3_pse+0x10>
 380:	35 d0       	rcall	.+106    	; 0x3ec <__divsf3_pse+0x92>
 382:	0e 2e       	mov	r0, r30
 384:	3a f0       	brmi	.+14     	; 0x394 <__divsf3_pse+0x3a>
 386:	e0 e8       	ldi	r30, 0x80	; 128
 388:	32 d0       	rcall	.+100    	; 0x3ee <__divsf3_pse+0x94>
 38a:	91 50       	subi	r25, 0x01	; 1
 38c:	50 40       	sbci	r21, 0x00	; 0
 38e:	e6 95       	lsr	r30
 390:	00 1c       	adc	r0, r0
 392:	ca f7       	brpl	.-14     	; 0x386 <__divsf3_pse+0x2c>
 394:	2b d0       	rcall	.+86     	; 0x3ec <__divsf3_pse+0x92>
 396:	fe 2f       	mov	r31, r30
 398:	29 d0       	rcall	.+82     	; 0x3ec <__divsf3_pse+0x92>
 39a:	66 0f       	add	r22, r22
 39c:	77 1f       	adc	r23, r23
 39e:	88 1f       	adc	r24, r24
 3a0:	bb 1f       	adc	r27, r27
 3a2:	26 17       	cp	r18, r22
 3a4:	37 07       	cpc	r19, r23
 3a6:	48 07       	cpc	r20, r24
 3a8:	ab 07       	cpc	r26, r27
 3aa:	b0 e8       	ldi	r27, 0x80	; 128
 3ac:	09 f0       	breq	.+2      	; 0x3b0 <__divsf3_pse+0x56>
 3ae:	bb 0b       	sbc	r27, r27
 3b0:	80 2d       	mov	r24, r0
 3b2:	bf 01       	movw	r22, r30
 3b4:	ff 27       	eor	r31, r31
 3b6:	93 58       	subi	r25, 0x83	; 131
 3b8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ba:	3a f0       	brmi	.+14     	; 0x3ca <__divsf3_pse+0x70>
 3bc:	9e 3f       	cpi	r25, 0xFE	; 254
 3be:	51 05       	cpc	r21, r1
 3c0:	78 f0       	brcs	.+30     	; 0x3e0 <__divsf3_pse+0x86>
 3c2:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>
 3c6:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>
 3ca:	5f 3f       	cpi	r21, 0xFF	; 255
 3cc:	e4 f3       	brlt	.-8      	; 0x3c6 <__divsf3_pse+0x6c>
 3ce:	98 3e       	cpi	r25, 0xE8	; 232
 3d0:	d4 f3       	brlt	.-12     	; 0x3c6 <__divsf3_pse+0x6c>
 3d2:	86 95       	lsr	r24
 3d4:	77 95       	ror	r23
 3d6:	67 95       	ror	r22
 3d8:	b7 95       	ror	r27
 3da:	f7 95       	ror	r31
 3dc:	9f 5f       	subi	r25, 0xFF	; 255
 3de:	c9 f7       	brne	.-14     	; 0x3d2 <__divsf3_pse+0x78>
 3e0:	88 0f       	add	r24, r24
 3e2:	91 1d       	adc	r25, r1
 3e4:	96 95       	lsr	r25
 3e6:	87 95       	ror	r24
 3e8:	97 f9       	bld	r25, 7
 3ea:	08 95       	ret
 3ec:	e1 e0       	ldi	r30, 0x01	; 1
 3ee:	66 0f       	add	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	bb 1f       	adc	r27, r27
 3f6:	62 17       	cp	r22, r18
 3f8:	73 07       	cpc	r23, r19
 3fa:	84 07       	cpc	r24, r20
 3fc:	ba 07       	cpc	r27, r26
 3fe:	20 f0       	brcs	.+8      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 400:	62 1b       	sub	r22, r18
 402:	73 0b       	sbc	r23, r19
 404:	84 0b       	sbc	r24, r20
 406:	ba 0b       	sbc	r27, r26
 408:	ee 1f       	adc	r30, r30
 40a:	88 f7       	brcc	.-30     	; 0x3ee <__divsf3_pse+0x94>
 40c:	e0 95       	com	r30
 40e:	08 95       	ret

00000410 <__fixunssfsi>:
 410:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_splitA>
 414:	88 f0       	brcs	.+34     	; 0x438 <__fixunssfsi+0x28>
 416:	9f 57       	subi	r25, 0x7F	; 127
 418:	98 f0       	brcs	.+38     	; 0x440 <__fixunssfsi+0x30>
 41a:	b9 2f       	mov	r27, r25
 41c:	99 27       	eor	r25, r25
 41e:	b7 51       	subi	r27, 0x17	; 23
 420:	b0 f0       	brcs	.+44     	; 0x44e <__fixunssfsi+0x3e>
 422:	e1 f0       	breq	.+56     	; 0x45c <__fixunssfsi+0x4c>
 424:	66 0f       	add	r22, r22
 426:	77 1f       	adc	r23, r23
 428:	88 1f       	adc	r24, r24
 42a:	99 1f       	adc	r25, r25
 42c:	1a f0       	brmi	.+6      	; 0x434 <__fixunssfsi+0x24>
 42e:	ba 95       	dec	r27
 430:	c9 f7       	brne	.-14     	; 0x424 <__fixunssfsi+0x14>
 432:	14 c0       	rjmp	.+40     	; 0x45c <__fixunssfsi+0x4c>
 434:	b1 30       	cpi	r27, 0x01	; 1
 436:	91 f0       	breq	.+36     	; 0x45c <__fixunssfsi+0x4c>
 438:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_zero>
 43c:	b1 e0       	ldi	r27, 0x01	; 1
 43e:	08 95       	ret
 440:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_zero>
 444:	67 2f       	mov	r22, r23
 446:	78 2f       	mov	r23, r24
 448:	88 27       	eor	r24, r24
 44a:	b8 5f       	subi	r27, 0xF8	; 248
 44c:	39 f0       	breq	.+14     	; 0x45c <__fixunssfsi+0x4c>
 44e:	b9 3f       	cpi	r27, 0xF9	; 249
 450:	cc f3       	brlt	.-14     	; 0x444 <__fixunssfsi+0x34>
 452:	86 95       	lsr	r24
 454:	77 95       	ror	r23
 456:	67 95       	ror	r22
 458:	b3 95       	inc	r27
 45a:	d9 f7       	brne	.-10     	; 0x452 <__fixunssfsi+0x42>
 45c:	3e f4       	brtc	.+14     	; 0x46c <__fixunssfsi+0x5c>
 45e:	90 95       	com	r25
 460:	80 95       	com	r24
 462:	70 95       	com	r23
 464:	61 95       	neg	r22
 466:	7f 4f       	sbci	r23, 0xFF	; 255
 468:	8f 4f       	sbci	r24, 0xFF	; 255
 46a:	9f 4f       	sbci	r25, 0xFF	; 255
 46c:	08 95       	ret

0000046e <__floatunsisf>:
 46e:	e8 94       	clt
 470:	09 c0       	rjmp	.+18     	; 0x484 <__floatsisf+0x12>

00000472 <__floatsisf>:
 472:	97 fb       	bst	r25, 7
 474:	3e f4       	brtc	.+14     	; 0x484 <__floatsisf+0x12>
 476:	90 95       	com	r25
 478:	80 95       	com	r24
 47a:	70 95       	com	r23
 47c:	61 95       	neg	r22
 47e:	7f 4f       	sbci	r23, 0xFF	; 255
 480:	8f 4f       	sbci	r24, 0xFF	; 255
 482:	9f 4f       	sbci	r25, 0xFF	; 255
 484:	99 23       	and	r25, r25
 486:	a9 f0       	breq	.+42     	; 0x4b2 <__floatsisf+0x40>
 488:	f9 2f       	mov	r31, r25
 48a:	96 e9       	ldi	r25, 0x96	; 150
 48c:	bb 27       	eor	r27, r27
 48e:	93 95       	inc	r25
 490:	f6 95       	lsr	r31
 492:	87 95       	ror	r24
 494:	77 95       	ror	r23
 496:	67 95       	ror	r22
 498:	b7 95       	ror	r27
 49a:	f1 11       	cpse	r31, r1
 49c:	f8 cf       	rjmp	.-16     	; 0x48e <__floatsisf+0x1c>
 49e:	fa f4       	brpl	.+62     	; 0x4de <__floatsisf+0x6c>
 4a0:	bb 0f       	add	r27, r27
 4a2:	11 f4       	brne	.+4      	; 0x4a8 <__floatsisf+0x36>
 4a4:	60 ff       	sbrs	r22, 0
 4a6:	1b c0       	rjmp	.+54     	; 0x4de <__floatsisf+0x6c>
 4a8:	6f 5f       	subi	r22, 0xFF	; 255
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	16 c0       	rjmp	.+44     	; 0x4de <__floatsisf+0x6c>
 4b2:	88 23       	and	r24, r24
 4b4:	11 f0       	breq	.+4      	; 0x4ba <__floatsisf+0x48>
 4b6:	96 e9       	ldi	r25, 0x96	; 150
 4b8:	11 c0       	rjmp	.+34     	; 0x4dc <__floatsisf+0x6a>
 4ba:	77 23       	and	r23, r23
 4bc:	21 f0       	breq	.+8      	; 0x4c6 <__floatsisf+0x54>
 4be:	9e e8       	ldi	r25, 0x8E	; 142
 4c0:	87 2f       	mov	r24, r23
 4c2:	76 2f       	mov	r23, r22
 4c4:	05 c0       	rjmp	.+10     	; 0x4d0 <__floatsisf+0x5e>
 4c6:	66 23       	and	r22, r22
 4c8:	71 f0       	breq	.+28     	; 0x4e6 <__floatsisf+0x74>
 4ca:	96 e8       	ldi	r25, 0x86	; 134
 4cc:	86 2f       	mov	r24, r22
 4ce:	70 e0       	ldi	r23, 0x00	; 0
 4d0:	60 e0       	ldi	r22, 0x00	; 0
 4d2:	2a f0       	brmi	.+10     	; 0x4de <__floatsisf+0x6c>
 4d4:	9a 95       	dec	r25
 4d6:	66 0f       	add	r22, r22
 4d8:	77 1f       	adc	r23, r23
 4da:	88 1f       	adc	r24, r24
 4dc:	da f7       	brpl	.-10     	; 0x4d4 <__floatsisf+0x62>
 4de:	88 0f       	add	r24, r24
 4e0:	96 95       	lsr	r25
 4e2:	87 95       	ror	r24
 4e4:	97 f9       	bld	r25, 7
 4e6:	08 95       	ret

000004e8 <__fp_inf>:
 4e8:	97 f9       	bld	r25, 7
 4ea:	9f 67       	ori	r25, 0x7F	; 127
 4ec:	80 e8       	ldi	r24, 0x80	; 128
 4ee:	70 e0       	ldi	r23, 0x00	; 0
 4f0:	60 e0       	ldi	r22, 0x00	; 0
 4f2:	08 95       	ret

000004f4 <__fp_nan>:
 4f4:	9f ef       	ldi	r25, 0xFF	; 255
 4f6:	80 ec       	ldi	r24, 0xC0	; 192
 4f8:	08 95       	ret

000004fa <__fp_pscA>:
 4fa:	00 24       	eor	r0, r0
 4fc:	0a 94       	dec	r0
 4fe:	16 16       	cp	r1, r22
 500:	17 06       	cpc	r1, r23
 502:	18 06       	cpc	r1, r24
 504:	09 06       	cpc	r0, r25
 506:	08 95       	ret

00000508 <__fp_pscB>:
 508:	00 24       	eor	r0, r0
 50a:	0a 94       	dec	r0
 50c:	12 16       	cp	r1, r18
 50e:	13 06       	cpc	r1, r19
 510:	14 06       	cpc	r1, r20
 512:	05 06       	cpc	r0, r21
 514:	08 95       	ret

00000516 <__fp_round>:
 516:	09 2e       	mov	r0, r25
 518:	03 94       	inc	r0
 51a:	00 0c       	add	r0, r0
 51c:	11 f4       	brne	.+4      	; 0x522 <__fp_round+0xc>
 51e:	88 23       	and	r24, r24
 520:	52 f0       	brmi	.+20     	; 0x536 <__fp_round+0x20>
 522:	bb 0f       	add	r27, r27
 524:	40 f4       	brcc	.+16     	; 0x536 <__fp_round+0x20>
 526:	bf 2b       	or	r27, r31
 528:	11 f4       	brne	.+4      	; 0x52e <__fp_round+0x18>
 52a:	60 ff       	sbrs	r22, 0
 52c:	04 c0       	rjmp	.+8      	; 0x536 <__fp_round+0x20>
 52e:	6f 5f       	subi	r22, 0xFF	; 255
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	8f 4f       	sbci	r24, 0xFF	; 255
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	08 95       	ret

00000538 <__fp_split3>:
 538:	57 fd       	sbrc	r21, 7
 53a:	90 58       	subi	r25, 0x80	; 128
 53c:	44 0f       	add	r20, r20
 53e:	55 1f       	adc	r21, r21
 540:	59 f0       	breq	.+22     	; 0x558 <__fp_splitA+0x10>
 542:	5f 3f       	cpi	r21, 0xFF	; 255
 544:	71 f0       	breq	.+28     	; 0x562 <__fp_splitA+0x1a>
 546:	47 95       	ror	r20

00000548 <__fp_splitA>:
 548:	88 0f       	add	r24, r24
 54a:	97 fb       	bst	r25, 7
 54c:	99 1f       	adc	r25, r25
 54e:	61 f0       	breq	.+24     	; 0x568 <__fp_splitA+0x20>
 550:	9f 3f       	cpi	r25, 0xFF	; 255
 552:	79 f0       	breq	.+30     	; 0x572 <__fp_splitA+0x2a>
 554:	87 95       	ror	r24
 556:	08 95       	ret
 558:	12 16       	cp	r1, r18
 55a:	13 06       	cpc	r1, r19
 55c:	14 06       	cpc	r1, r20
 55e:	55 1f       	adc	r21, r21
 560:	f2 cf       	rjmp	.-28     	; 0x546 <__fp_split3+0xe>
 562:	46 95       	lsr	r20
 564:	f1 df       	rcall	.-30     	; 0x548 <__fp_splitA>
 566:	08 c0       	rjmp	.+16     	; 0x578 <__fp_splitA+0x30>
 568:	16 16       	cp	r1, r22
 56a:	17 06       	cpc	r1, r23
 56c:	18 06       	cpc	r1, r24
 56e:	99 1f       	adc	r25, r25
 570:	f1 cf       	rjmp	.-30     	; 0x554 <__fp_splitA+0xc>
 572:	86 95       	lsr	r24
 574:	71 05       	cpc	r23, r1
 576:	61 05       	cpc	r22, r1
 578:	08 94       	sec
 57a:	08 95       	ret

0000057c <__fp_zero>:
 57c:	e8 94       	clt

0000057e <__fp_szero>:
 57e:	bb 27       	eor	r27, r27
 580:	66 27       	eor	r22, r22
 582:	77 27       	eor	r23, r23
 584:	cb 01       	movw	r24, r22
 586:	97 f9       	bld	r25, 7
 588:	08 95       	ret

0000058a <__mulsf3>:
 58a:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__mulsf3x>
 58e:	0c 94 8b 02 	jmp	0x516	; 0x516 <__fp_round>
 592:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_pscA>
 596:	38 f0       	brcs	.+14     	; 0x5a6 <__mulsf3+0x1c>
 598:	0e 94 84 02 	call	0x508	; 0x508 <__fp_pscB>
 59c:	20 f0       	brcs	.+8      	; 0x5a6 <__mulsf3+0x1c>
 59e:	95 23       	and	r25, r21
 5a0:	11 f0       	breq	.+4      	; 0x5a6 <__mulsf3+0x1c>
 5a2:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>
 5a6:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_nan>
 5aa:	11 24       	eor	r1, r1
 5ac:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>

000005b0 <__mulsf3x>:
 5b0:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_split3>
 5b4:	70 f3       	brcs	.-36     	; 0x592 <__mulsf3+0x8>

000005b6 <__mulsf3_pse>:
 5b6:	95 9f       	mul	r25, r21
 5b8:	c1 f3       	breq	.-16     	; 0x5aa <__mulsf3+0x20>
 5ba:	95 0f       	add	r25, r21
 5bc:	50 e0       	ldi	r21, 0x00	; 0
 5be:	55 1f       	adc	r21, r21
 5c0:	62 9f       	mul	r22, r18
 5c2:	f0 01       	movw	r30, r0
 5c4:	72 9f       	mul	r23, r18
 5c6:	bb 27       	eor	r27, r27
 5c8:	f0 0d       	add	r31, r0
 5ca:	b1 1d       	adc	r27, r1
 5cc:	63 9f       	mul	r22, r19
 5ce:	aa 27       	eor	r26, r26
 5d0:	f0 0d       	add	r31, r0
 5d2:	b1 1d       	adc	r27, r1
 5d4:	aa 1f       	adc	r26, r26
 5d6:	64 9f       	mul	r22, r20
 5d8:	66 27       	eor	r22, r22
 5da:	b0 0d       	add	r27, r0
 5dc:	a1 1d       	adc	r26, r1
 5de:	66 1f       	adc	r22, r22
 5e0:	82 9f       	mul	r24, r18
 5e2:	22 27       	eor	r18, r18
 5e4:	b0 0d       	add	r27, r0
 5e6:	a1 1d       	adc	r26, r1
 5e8:	62 1f       	adc	r22, r18
 5ea:	73 9f       	mul	r23, r19
 5ec:	b0 0d       	add	r27, r0
 5ee:	a1 1d       	adc	r26, r1
 5f0:	62 1f       	adc	r22, r18
 5f2:	83 9f       	mul	r24, r19
 5f4:	a0 0d       	add	r26, r0
 5f6:	61 1d       	adc	r22, r1
 5f8:	22 1f       	adc	r18, r18
 5fa:	74 9f       	mul	r23, r20
 5fc:	33 27       	eor	r19, r19
 5fe:	a0 0d       	add	r26, r0
 600:	61 1d       	adc	r22, r1
 602:	23 1f       	adc	r18, r19
 604:	84 9f       	mul	r24, r20
 606:	60 0d       	add	r22, r0
 608:	21 1d       	adc	r18, r1
 60a:	82 2f       	mov	r24, r18
 60c:	76 2f       	mov	r23, r22
 60e:	6a 2f       	mov	r22, r26
 610:	11 24       	eor	r1, r1
 612:	9f 57       	subi	r25, 0x7F	; 127
 614:	50 40       	sbci	r21, 0x00	; 0
 616:	9a f0       	brmi	.+38     	; 0x63e <__mulsf3_pse+0x88>
 618:	f1 f0       	breq	.+60     	; 0x656 <__mulsf3_pse+0xa0>
 61a:	88 23       	and	r24, r24
 61c:	4a f0       	brmi	.+18     	; 0x630 <__mulsf3_pse+0x7a>
 61e:	ee 0f       	add	r30, r30
 620:	ff 1f       	adc	r31, r31
 622:	bb 1f       	adc	r27, r27
 624:	66 1f       	adc	r22, r22
 626:	77 1f       	adc	r23, r23
 628:	88 1f       	adc	r24, r24
 62a:	91 50       	subi	r25, 0x01	; 1
 62c:	50 40       	sbci	r21, 0x00	; 0
 62e:	a9 f7       	brne	.-22     	; 0x61a <__mulsf3_pse+0x64>
 630:	9e 3f       	cpi	r25, 0xFE	; 254
 632:	51 05       	cpc	r21, r1
 634:	80 f0       	brcs	.+32     	; 0x656 <__mulsf3_pse+0xa0>
 636:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_inf>
 63a:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>
 63e:	5f 3f       	cpi	r21, 0xFF	; 255
 640:	e4 f3       	brlt	.-8      	; 0x63a <__mulsf3_pse+0x84>
 642:	98 3e       	cpi	r25, 0xE8	; 232
 644:	d4 f3       	brlt	.-12     	; 0x63a <__mulsf3_pse+0x84>
 646:	86 95       	lsr	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	b7 95       	ror	r27
 64e:	f7 95       	ror	r31
 650:	e7 95       	ror	r30
 652:	9f 5f       	subi	r25, 0xFF	; 255
 654:	c1 f7       	brne	.-16     	; 0x646 <__mulsf3_pse+0x90>
 656:	fe 2b       	or	r31, r30
 658:	88 0f       	add	r24, r24
 65a:	91 1d       	adc	r25, r1
 65c:	96 95       	lsr	r25
 65e:	87 95       	ror	r24
 660:	97 f9       	bld	r25, 7
 662:	08 95       	ret

00000664 <_exit>:
 664:	f8 94       	cli

00000666 <__stop_program>:
 666:	ff cf       	rjmp	.-2      	; 0x666 <__stop_program>
